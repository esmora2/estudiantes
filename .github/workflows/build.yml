name: Build and Analyze with SonarQube and ngrok

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Install ngrok manually
      - name: Install ngrok
        run: |
          curl -sL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz | tar xz
          sudo mv ngrok /usr/local/bin/

      # Authenticate ngrok
      - name: Authenticate ngrok
        run: ngrok config add-authtoken ${{ secrets.NGROK_TOKEN }}

      # Cache Maven and SonarQube dependencies
      - name: Cache Maven and SonarQube dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.sonar/cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Build, Test, and Run SonarQube Analysis
      - name: Build and Analyze with SonarQube
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=EstudiantesTest \
          -Dsonar.projectName="Estudiantes Test Project" \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
